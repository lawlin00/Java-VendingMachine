/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DomainProduct.BottleDrinks;
import DomainProduct.CanDrinks;
import DomainProduct.Drinks;
import adapter.DrinksAdapter;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author User
 */
public class AdminStock1 extends DefaultFrame {

    /**
     * Creates new form AdminStock
     */
    DefaultTableModel model;
    public static String Imgname = null;
    public static String fname = null;
    public static String filepath = null;
    public static String tempfilepath = null;
    public AdminStock1() {
        
        initComponents();
        refreshTable();
        
     //   txtID.setText(drink.getID());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtMDID = new javax.swing.JTextField();
        txtMDName = new javax.swing.JTextField();
        txtMDQuantity = new javax.swing.JTextField();
        txtMDSupplier = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtMDPrice = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        btnModify = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        cmbMDType = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        btnChangeImage = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        txtSupplier = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        CmbType = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cmbFilter = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel21.setText("Type:");

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel22.setText("Price:");

        txtMDID.setEditable(false);
        txtMDID.setBackground(new java.awt.Color(204, 204, 204));
        txtMDID.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        txtMDName.setBackground(new java.awt.Color(204, 255, 255));
        txtMDName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        txtMDQuantity.setBackground(new java.awt.Color(204, 255, 255));
        txtMDQuantity.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtMDQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMDQuantityActionPerformed(evt);
            }
        });

        txtMDSupplier.setBackground(new java.awt.Color(204, 255, 255));
        txtMDSupplier.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel23.setText("ID:");

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel24.setText("Name:");

        txtMDPrice.setBackground(new java.awt.Color(204, 255, 255));
        txtMDPrice.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtMDPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMDPriceActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel25.setText("Quantity:");

        btnModify.setBackground(new java.awt.Color(204, 255, 204));
        btnModify.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnModify.setText("Modify");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel26.setText("Supplier:");

        btnDelete.setBackground(new java.awt.Color(255, 153, 153));
        btnDelete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        cmbMDType.setBackground(new java.awt.Color(204, 255, 255));
        cmbMDType.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        cmbMDType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not Selected", "Bottle", "Cans" }));
        cmbMDType.setToolTipText("");

        jLabel3.setText("Image");

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel27.setText("Image: ");

        btnChangeImage.setBackground(new java.awt.Color(204, 255, 255));
        btnChangeImage.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnChangeImage.setText("Change Image");
        btnChangeImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeImageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnModify))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMDID)
                                    .addComponent(txtMDName)
                                    .addComponent(txtMDQuantity)
                                    .addComponent(txtMDSupplier)
                                    .addComponent(txtMDPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                    .addComponent(cmbMDType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnChangeImage)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnChangeImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(txtMDID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtMDName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txtMDQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txtMDSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(cmbMDType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtMDPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModify)
                    .addComponent(btnDelete))
                .addGap(28, 28, 28))
        );

        jTabbedPane2.addTab("Modify Drinks", jPanel1);

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("ID:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Name:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Quantity:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Supplier:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("Type:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("Price:");

        txtID.setEditable(false);
        txtID.setBackground(new java.awt.Color(204, 204, 204));
        txtID.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        txtName.setBackground(new java.awt.Color(204, 255, 255));
        txtName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtQuantity.setBackground(new java.awt.Color(204, 255, 255));
        txtQuantity.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });

        txtSupplier.setBackground(new java.awt.Color(204, 255, 255));
        txtSupplier.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N

        txtPrice.setBackground(new java.awt.Color(204, 255, 255));
        txtPrice.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        btnCreate.setBackground(new java.awt.Color(204, 255, 204));
        btnCreate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        CmbType.setBackground(new java.awt.Color(204, 255, 255));
        CmbType.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        CmbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Not Selected", "Bottle", "Cans" }));

        jButton1.setBackground(new java.awt.Color(204, 255, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Upload Image");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Image");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setText("Image: ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnCreate))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtID)
                                    .addComponent(txtName)
                                    .addComponent(txtQuantity)
                                    .addComponent(txtSupplier)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                    .addComponent(CmbType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1))))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(CmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCreate)
                .addGap(23, 23, 23))
        );

        jTabbedPane2.addTab("New Drinks", jPanel3);

        jTable1.setBackground(new java.awt.Color(204, 255, 255));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "ID", "Name", "Quantity", "Supplier", "Type", "Price", "ImagePath"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setRowHeight(30);
        jTable1.setRowMargin(5);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        cmbFilter.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        cmbFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All Drinks", "Bottle Drink", "Can Drink" }));
        cmbFilter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFilterItemStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Filter");

        jLabel1.setFont(new java.awt.Font("Imprint MT Shadow", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Stock");

        jLabel2.setText("*Please note that only top 10 drinks will be shown in the vending machine. ");

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setFont(new java.awt.Font("Sitka Heading", 1, 18)); // NOI18N
        jButton2.setText("Logout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(18, 18, 18)
                            .addComponent(cmbFilter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cmbFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jTabbedPane2))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        //Check row information
        int row = jTable1.getSelectedRow();
//        System.out.println("Row: "+ row);
        int id = Integer.parseInt((String)model.getValueAt(row, 1));
        String name = (String)model.getValueAt(row,2);
        int quantity = Integer.parseInt((String)model.getValueAt(row,3));
        String supplier = (String)model.getValueAt(row,4);
        String type = (String)model.getValueAt(row,5);
        double price = Double.parseDouble((String)model.getValueAt(row,6));
        String Img = (String)model.getValueAt(row, 7);
        Drinks drink = new Drinks();
        drink.setID(id);
        drink.setName(name);
        drink.setQuantity(quantity);
        drink.setSupplier(supplier);
        drink.setType(type);
        drink.setPrice(price);
        drink.setImagePath(Img);
        tempfilepath = null;
        //set selected row data into the textfields
        
        jTabbedPane2.setSelectedIndex(0);
        
        fill(drink); 
        
    }//GEN-LAST:event_jTable1MouseClicked
    
    private void refreshTable(){
        //refresh Table
        model = (DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        int i = 0;
        List<Drinks> data = DrinksAdapter.getDrinks();
        for (Drinks drink :data){
            i++;
            model.addRow (new Object[]{
            Integer.toString(i),
            Integer.toString(drink.getID()),
            drink.getName(),
            Integer.toString(drink.getQuantity()),
            drink.getSupplier(),
            drink.getType(),
            Double.toString(drink.getPrice()),
            drink.getImagePath()
        });
        }
        setColor();
        int lastRow = model.getRowCount()- 1;
      //  model.setRowColour(1, Color.YELLOW);
        
        Object LastID = jTable1.getValueAt(lastRow,1);
        
        int NewID = Integer.valueOf((String) LastID) + 1;
        txtID.setText(Integer.toString(NewID));
       // setColor(jTable1,Color.RED);
     
      
    }
    
    public void setColor(){
        jTable1.setDefaultRenderer(Object.class, new DefaultTableCellRenderer(){
      //  @Override
        public Component getTableCellRendererComponent(JTable table,Object value, boolean isSelected, boolean hasFocus,int row, int column){
           JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
           Color c = new Color(204,255,255);
           Color t = new Color(102,51,0);
           //Color c = Color.BLACK;
          // Color t = Color.WHITE;
           Object stock = Integer.parseInt((String) table.getValueAt(row,3));
           Integer q = new Integer((int) stock);
           
           //System.out.println(stock);
           //int q = ((Integer) stock).intValue();
           if (q == 0){
                c = new Color(255,51,51);
                t = Color.WHITE;
              
           }else if(q <= 50){
            c = new Color(255,204,51);
            t = Color.BLACK;
           }
            label.setBackground(c);
            label.setForeground(t);
            return label;
            
        }
    
        });
    }
    
   

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        // TODO add your handling code here:
        // Get textfield information
        Drinks newDrinks = new Drinks();
        try{
        newDrinks.setID( Integer.parseInt(txtMDID.getText()) );//convert from String into Integer
        newDrinks.setName(txtMDName.getText());
        newDrinks.setQuantity(Integer.parseInt(txtMDQuantity.getText()));
        newDrinks.setSupplier(txtMDSupplier.getText());
        newDrinks.setType( cmbMDType.getItemAt(cmbMDType.getSelectedIndex()));
        newDrinks.setPrice(Double.parseDouble(txtMDPrice.getText()));
        int CheckType = cmbMDType.getSelectedIndex();
        
         int Quantity = Integer.parseInt(txtMDQuantity.getText()) ;
        double Price = Double.parseDouble(txtMDPrice.getText());
         if (Quantity < 0 || Price < 0 ){
            JOptionPane.showMessageDialog(null, "The Quantity or Price should be positive value", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
        
        if(CheckType !=0){ // check what is the drinks type
            System.out.println(tempfilepath);
            if (tempfilepath == null){
                newDrinks.setImagePath(fname);
                newDrinks.edit();
                refreshTable();
                JOptionPane.showMessageDialog(rootPane, "The record is updated successfully.");
            }else{
                addImage(tempfilepath,txtMDName.getText());
                newDrinks.setImagePath(fname);
                System.out.println(fname);
                newDrinks.edit();
                refreshTable();
                JOptionPane.showMessageDialog(rootPane, "The record is updated successfully.");
            }
            /*            addImage(filepath,txtMDName.getText());
            newDrinks.setImagePath(fname);
            System.out.println(fname);
            newDrinks.edit();
            refreshTable();
            JOptionPane.showMessageDialog(rootPane, "The record is updated successfully.");*/
        
        }else{
           JOptionPane.showMessageDialog(null, "Please select correct type", "Error", JOptionPane.ERROR_MESSAGE);
        } }// validation of user input
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Please enter a valid data information", "Error", JOptionPane.ERROR_MESSAGE);
        }

        
        
    }//GEN-LAST:event_btnModifyActionPerformed

    private void txtMDPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMDPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMDPriceActionPerformed

    private void txtMDQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMDQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMDQuantityActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        Drinks newDrinks = new Drinks(); //get textfield information
        try{ //validation of user input
        newDrinks.setID( Integer.parseInt(txtID.getText()) );//convert from String into Integer
        newDrinks.setName( txtName.getText() );
        newDrinks.setQuantity(Integer.parseInt(txtQuantity.getText()) );
        newDrinks.setSupplier( txtSupplier.getText() );
        newDrinks.setType( CmbType.getItemAt(CmbType.getSelectedIndex()));
        newDrinks.setPrice( Double.parseDouble(txtPrice.getText()) );
        
        int Quantity = Integer.parseInt(txtQuantity.getText()) ;
        double Price = Double.parseDouble(txtPrice.getText());
        if (Quantity < 0 || Price < 0 ){
            JOptionPane.showMessageDialog(null, "The Quantity or Price should be positive value", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            int CheckType = CmbType.getSelectedIndex();
        if(CheckType !=0){
            addImage(filepath, txtName.getText());
            newDrinks.setImagePath(fname);
            System.out.println(fname);
            newDrinks.addNew();
            refreshTable();
        
        }else{
           JOptionPane.showMessageDialog(null, "Please select correct type of drinks", "Error", JOptionPane.ERROR_MESSAGE);
        }
        }
        
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Please enter a valid number", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        

       
    }//GEN-LAST:event_btnCreateActionPerformed

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
      int confirmation = JOptionPane.showConfirmDialog(null, "Do you really want to delete records?");
      //System.out.println(confirmation);
      if (confirmation == 0){ //if user confirm to delete, check is the number of drinks enough
        Drinks newDrinks = new Drinks();
        newDrinks.setID( Integer.parseInt(txtMDID.getText()) );//convert from String into Integer
        newDrinks.setName(txtMDName.getText());
        newDrinks.setQuantity(Integer.parseInt(txtMDQuantity.getText()));
        newDrinks.setSupplier(txtMDSupplier.getText());
        newDrinks.setType( cmbMDType.getItemAt(cmbMDType.getSelectedIndex()));
        newDrinks.setPrice(Double.parseDouble(txtMDPrice.getText()));   
        if (jTable1.getRowCount() <=10){
            JOptionPane.showMessageDialog(rootPane, "Please make sure there are 10 records.");
        }else{
        newDrinks.delete();
        refreshTable(); 
        JOptionPane.showMessageDialog(rootPane, "The record is delete successfully.");
        }
        
      
      }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void cmbFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFilterItemStateChanged
        // TODO add your handling code here:
        //filter the dinks record
        String Type = cmbFilter.getItemAt(cmbFilter.getSelectedIndex());
        if (Type == "Bottle Drink"){
            filterbottle();
        }else if(Type == "Can Drink"){
            filterCans();
        }else{
            refreshTable();
        }
    }//GEN-LAST:event_cmbFilterItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // upload image for create new drinks
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        chooser.setDialogTitle("Please select a file.");
        File f = chooser.getSelectedFile();
        filepath = f.getAbsolutePath();
        System.out.println(filepath);
        setImageC(filepath);
        //addImage(filepath);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnChangeImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeImageActionPerformed
        // TODO add your handling code here:
        //change image of drinks
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        chooser.setDialogTitle("Please select a file.");
        File f = chooser.getSelectedFile();
        tempfilepath = f.getAbsolutePath();
        System.out.println(tempfilepath);
        setImageM(tempfilepath);
    }//GEN-LAST:event_btnChangeImageActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //user logout
        new Login().setVisible(true);
        dispose();
        
    }//GEN-LAST:event_jButton2ActionPerformed
   
    private void addImage(String filepath, String tFText){
        //read image file and write image
        System.out.println(filepath);
        int width = 200;
        int height = 200;
        BufferedImage image = null;
        File f = null;
        
         try{
            f = new File(filepath); //image file path
            image = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
            image = ImageIO.read(f);
            System.out.println("Reading complete.");
            
       }catch(IOException e){
                System.out.println("Error: "+e);
       }

    //write image
          try{
            Imgname =  tFText;
            fname = "Image\\Drinks\\" + Imgname + ".jpg";
            f = new File("Image\\Drinks\\"+Imgname+".jpg");  //output file path
            //char[] chars = new char[(int) f.length()];
            //String fname = new String(chars);
            ImageIO.write(image, "jpg", f);
            //newDrinks.setImagePath(f);
            System.out.println(Imgname);
           // setImage(Imgname);
            
            System.out.println("Writing complete.");
             JOptionPane.showMessageDialog(rootPane, "File Successfully added.");
          //  Drinks newDrinks = new Drinks();
          //  newDrinks.setImagePath(fname);
            }catch(IOException e){
               System.out.println("Error: "+e);
             }        
        
    }
    
     public void setImageC(String filepath){
         //set icon to the label of create
        ImageIcon iconProfile = new ImageIcon(filepath);
      //  jImg.setIcon(iconProfile);
        Image image = iconProfile.getImage();
        image = image.getScaledInstance(200,200,Image.SCALE_SMOOTH);
        iconProfile = new ImageIcon(image);
        jLabel4.setIcon(iconProfile);
        jLabel4.setText("");
    }
     
     public void setImageM(String filepath){
         //set icon to the label of modify
        ImageIcon iconProfile = new ImageIcon(filepath);
      //  jImg.setIcon(iconProfile);
        Image image = iconProfile.getImage();
        image = image.getScaledInstance(120,120,Image.SCALE_SMOOTH);
        iconProfile = new ImageIcon(image);
        jLabel3.setIcon(iconProfile);
        jLabel3.setText("");
    }
     
     /*
     References of Image Code: 
     Minh, N. H., 2019. Show Save File Dialog Using Jfilechooser. [Online] 
     Available at: https://www.codejava.net/java-se/swing/show-save-file-dialog-using-jfilechooser
     [Accessed 12 April 2020].
     Shakeel, Y., 2014. How to read and write image file in Java. [Online] 
     Available at: https://www.dyclassroom.com/image-processing-project/how-to-read-and-write-image-file-in-java
     [Accessed 12 Apr 2020].


     
     
     */
    
    private void fill(Drinks drink){
        //fill in the table row record to modify textfield
       txtMDID.setText(Integer.toString(drink.getID()));
       txtMDName.setText(drink.getName());
       int Quantity = drink.getQuantity();
       if (Quantity == 0){
           txtMDQuantity.setBackground(Color.RED);
           txtMDQuantity.setForeground(Color.WHITE);
       }else if(Quantity <= 50){
           txtMDQuantity.setBackground(Color.orange);
           
       }
       txtMDQuantity.setText(Integer.toString(drink.getQuantity()));
       txtMDSupplier.setText(drink.getSupplier());
       cmbMDType.setSelectedItem(drink.getType());
       txtMDPrice.setText(Double.toString(drink.getPrice()));
       
       jLabel3.setText("");
       fname = drink.getImagePath();
       ImageIcon iconProfile = new ImageIcon(fname);
       Image image = iconProfile.getImage();
       image = image.getScaledInstance(120,120,Image.SCALE_SMOOTH);
       iconProfile = new ImageIcon(image);
       jLabel3.setIcon(iconProfile);
       
   //    System.out.println(drink.getType());
    }
    
    private void checkstock(){

    }
    
    private void filterbottle(){
        //add bottle drinks to table
        model.setRowCount(0);
        int i = 0;
        List<BottleDrinks> data = DrinksAdapter.getBottleDrinks();
        for (BottleDrinks drink :data){
            i++;
            model.addRow (new String[]{
            Integer.toString(i),
            Integer.toString(drink.getID()),
            drink.getName(),
            Integer.toString(drink.getQuantity()),
            drink.getSupplier(),
            drink.getType(),
            Double.toString(drink.getPrice()),
            drink.getImagePath()
        });
    }
    }
    
    private void filterCans(){
        //add cans drinks to table
        model.setRowCount(0);
        List<CanDrinks> data = DrinksAdapter.getCanDrinks();
        int i = 0;
        for (CanDrinks drink :data){
            i++;
            model.addRow (new String[]{
            Integer.toString(i),
            Integer.toString(drink.getID()),
            drink.getName(),
            Integer.toString(drink.getQuantity()),
            drink.getSupplier(),
            drink.getType(),
            Double.toString(drink.getPrice()),
            drink.getImagePath()
        });
    }
    }
      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminStock1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminStock1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminStock1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminStock1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminStock1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CmbType;
    private javax.swing.JButton btnChangeImage;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnModify;
    private javax.swing.JComboBox<String> cmbFilter;
    private javax.swing.JComboBox<String> cmbMDType;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMDID;
    private javax.swing.JTextField txtMDName;
    private javax.swing.JTextField txtMDPrice;
    private javax.swing.JTextField txtMDQuantity;
    private javax.swing.JTextField txtMDSupplier;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSupplier;
    // End of variables declaration//GEN-END:variables

    void setVisible() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
